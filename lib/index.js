// Generated by CoffeeScript 1.3.3
var bouncy, db, follow, freeway, log, nconf, opts, pin, start, updateSettings,
  _this = this;

log = console.log;

pin = require('linchpin');

bouncy = require('bouncy');

nconf = require('nconf');

follow = require('follow');

nconf.env().file({
  file: "./config.json"
});

db = nconf.get('datastore');

freeway = require('nano')(db);

follow = require('follow');

opts = {};

nconf.set('default', "https://localhost:9000");

updateSettings = function(settings) {
  if (settings != null) {
    nconf.set('tokens', settings.tokens);
    if (settings["default"] != null) {
      nconf.set('default', settings["default"]);
    }
    return log('Updated Settings from CouchDb.....');
  }
};

start = function(port) {
  var server,
    _this = this;
  server = bouncy(opts, function(req, bounce) {
    var target, xtoken;
    xtoken = req.headers['x-token'];
    target = nconf.get('default');
    if ((xtoken != null) && nconf.get('tokens').indexOf(xtoken) >= 0) {
      target = req.headers.host;
    }
    try {
      return bounce(target);
    } catch (err) {
      console.log(err.message);
      return bounce('http://www.eirenerx.com');
    }
  });
  server.on("error", function(err) {
    return console.error(err.message);
  });
  return server.listen(port);
};

freeway.get('settings', function(e, doc) {
  if (e) {
    return log(e);
  }
  if (doc._id === 'settings') {
    return updateSettings(doc);
  }
});

follow({
  db: db,
  include_docs: true
}, function(e, change) {
  if (e) {
    return log(e);
  }
  return updateSettings(change.doc);
});

pin.on('getKEY', function() {
  return freeway.attachment.get('settings', 'eirenerx.com.key', function(err, key) {
    if (err != null) {
      return log(err);
    }
    opts.key = key.toString();
    return pin.emit('getCERT');
  });
});

pin.on('getCERT', function() {
  return freeway.attachment.get('settings', 'eirenerx.com.pem', function(err, cert) {
    if (err != null) {
      return log(err);
    }
    opts.cert = cert.toString();
    return pin.emit('LOADED', null);
  });
});

module.exports = function(port) {
  log('Welcome to Freeway v 1.0.0alpha3');
  pin.emit('getKEY');
  log('Initializing...');
  return pin.on('LOADED', function(err) {
    log("Starting server on port " + port + "...");
    return start(port);
  });
};
